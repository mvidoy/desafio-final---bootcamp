{"ast":null,"code":"import _defineProperty from \"/Desenv/BootCamp-GoStack/gostack-meetapp-frontend-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Desenv/BootCamp-GoStack/gostack-meetapp-frontend-master/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\";\nimport { updateProfileSuccess, updateProfileFailure } from './actions';\nexport function* updateProfile({\n  payload\n}) {\n  try {\n    const _payload$data = payload.data,\n          name = _payload$data.name,\n          email = _payload$data.email,\n          avatar_id = _payload$data.avatar_id,\n          rest = _objectWithoutProperties(_payload$data, [\"name\", \"email\", \"avatar_id\"]);\n\n    const profile = _objectSpread({\n      name,\n      email,\n      avatar_id\n    }, rest.oldPassword ? rest : {});\n\n    const response = yield call(api.put, 'users', profile);\n    toast.success('Perfil atualizado com sucesso');\n    yield put(updateProfileSuccess(response.data));\n  } catch (err) {\n    toast.error('Erro ao atualizar perfil, confira seus dados!');\n    yield put(updateProfileFailure());\n  }\n}\nexport default all([takeLatest('@user/UPDATE_PROFILE_REQUEST', updateProfile)]);","map":{"version":3,"sources":["/Desenv/BootCamp-GoStack/gostack-meetapp-frontend-master/src/store/modules/user/sagas.js"],"names":["takeLatest","call","put","all","toast","api","updateProfileSuccess","updateProfileFailure","updateProfile","payload","data","name","email","avatar_id","rest","profile","oldPassword","response","success","err","error"],"mappings":";;;;;;;AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,WAA3D;AAEA,OAAO,UAAUC,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AAC1C,MAAI;AAAA,0BAC0CA,OAAO,CAACC,IADlD;AAAA,UACMC,IADN,iBACMA,IADN;AAAA,UACYC,KADZ,iBACYA,KADZ;AAAA,UACmBC,SADnB,iBACmBA,SADnB;AAAA,UACiCC,IADjC;;AAGF,UAAMC,OAAO;AACXJ,MAAAA,IADW;AAEXC,MAAAA,KAFW;AAGXC,MAAAA;AAHW,OAKPC,IAAI,CAACE,WAAL,GAAmBF,IAAnB,GAA0B,EALnB,CAAb;;AAQA,UAAMG,QAAQ,GAAG,MAAMhB,IAAI,CAACI,GAAG,CAACH,GAAL,EAAU,OAAV,EAAmBa,OAAnB,CAA3B;AAEAX,IAAAA,KAAK,CAACc,OAAN,CAAc,+BAAd;AAEA,UAAMhB,GAAG,CAACI,oBAAoB,CAACW,QAAQ,CAACP,IAAV,CAArB,CAAT;AACD,GAhBD,CAgBE,OAAOS,GAAP,EAAY;AACZf,IAAAA,KAAK,CAACgB,KAAN,CAAY,+CAAZ;AACA,UAAMlB,GAAG,CAACK,oBAAoB,EAArB,CAAT;AACD;AACF;AAED,eAAeJ,GAAG,CAAC,CAACH,UAAU,CAAC,8BAAD,EAAiCQ,aAAjC,CAAX,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '~/services/api';\n\nimport { updateProfileSuccess, updateProfileFailure } from './actions';\n\nexport function* updateProfile({ payload }) {\n  try {\n    const { name, email, avatar_id, ...rest } = payload.data;\n\n    const profile = {\n      name,\n      email,\n      avatar_id,\n\n      ...(rest.oldPassword ? rest : {}),\n    };\n\n    const response = yield call(api.put, 'users', profile);\n\n    toast.success('Perfil atualizado com sucesso');\n\n    yield put(updateProfileSuccess(response.data));\n  } catch (err) {\n    toast.error('Erro ao atualizar perfil, confira seus dados!');\n    yield put(updateProfileFailure());\n  }\n}\n\nexport default all([takeLatest('@user/UPDATE_PROFILE_REQUEST', updateProfile)]);\n"]},"metadata":{},"sourceType":"module"}