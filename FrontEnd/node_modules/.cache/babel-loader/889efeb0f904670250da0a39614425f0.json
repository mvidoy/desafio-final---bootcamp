{"ast":null,"code":"var _jsxFileName = \"/Desenv/BootCamp-GoStack/gostack-meetapp-frontend-master/src/pages/Profile/index.js\";\nimport React from 'react';\nimport { Form, Input } from '@rocketseat/unform';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdAddCircleOutline } from 'react-icons/md';\nimport * as Yup from 'yup';\nimport { updateProfileRequest } from \"../../store/modules/user/actions\";\nimport { Container } from './styles';\nconst schema = Yup.object().shape({\n  name: Yup.string(),\n  email: Yup.string().email(),\n  oldPassword: Yup.string(),\n  password: Yup.string().when('oldPassword', (oldPassword, field) => oldPassword ? field.min(6, 'Mínimo de 6 caracteres') : field),\n  confirmPassword: Yup.string().when('password', (password, field) => password ? field.required('A confirmação de senha é obrigatória').oneOf([Yup.ref('password')]) : field)\n});\nexport default function Profile() {\n  const dispatch = useDispatch();\n  const profile = useSelector(state => state.user.profile);\n\n  function handleSubmit(data) {\n    dispatch(updateProfileRequest(data));\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form, {\n    initialData: profile,\n    schema: schema,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"name\",\n    placeholder: \"Nome completo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Seu endere\\xE7o de e-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"password\",\n    name: \"oldPassword\",\n    placeholder: \"Senha atual\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Nova senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: \"Confirma\\xE7\\xE3o de senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(MdAddCircleOutline, {\n    size: 20,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Atualizar perfil\"))));\n}","map":{"version":3,"sources":["/Desenv/BootCamp-GoStack/gostack-meetapp-frontend-master/src/pages/Profile/index.js"],"names":["React","Form","Input","useDispatch","useSelector","MdAddCircleOutline","Yup","updateProfileRequest","Container","schema","object","shape","name","string","email","oldPassword","password","when","field","min","confirmPassword","required","oneOf","ref","Profile","dispatch","profile","state","user","handleSubmit","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input } from '@rocketseat/unform';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdAddCircleOutline } from 'react-icons/md';\nimport * as Yup from 'yup';\n\nimport { updateProfileRequest } from '~/store/modules/user/actions';\n\nimport { Container } from './styles';\n\nconst schema = Yup.object().shape({\n  name: Yup.string(),\n  email: Yup.string().email(),\n  oldPassword: Yup.string(),\n  password: Yup.string().when('oldPassword', (oldPassword, field) =>\n    oldPassword ? field.min(6, 'Mínimo de 6 caracteres') : field\n  ),\n  confirmPassword: Yup.string().when('password', (password, field) =>\n    password\n      ? field\n          .required('A confirmação de senha é obrigatória')\n          .oneOf([Yup.ref('password')])\n      : field\n  ),\n});\n\nexport default function Profile() {\n  const dispatch = useDispatch();\n  const profile = useSelector(state => state.user.profile);\n\n  function handleSubmit(data) {\n    dispatch(updateProfileRequest(data));\n  }\n\n  return (\n    <Container>\n      <Form initialData={profile} schema={schema} onSubmit={handleSubmit}>\n        <Input name=\"name\" placeholder=\"Nome completo\" />\n        <Input name=\"email\" type=\"email\" placeholder=\"Seu endereço de e-mail\" />\n\n        <hr />\n\n        <Input type=\"password\" name=\"oldPassword\" placeholder=\"Senha atual\" />\n        <Input type=\"password\" name=\"password\" placeholder=\"Nova senha\" />\n        <Input\n          type=\"password\"\n          name=\"confirmPassword\"\n          placeholder=\"Confirmação de senha\"\n        />\n\n        <button type=\"submit\">\n          <MdAddCircleOutline size={20} color=\"#fff\" />\n          <span>Atualizar perfil</span>\n        </button>\n      </Form>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}